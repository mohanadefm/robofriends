{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","src","alt","CardList","cardsArray","robots","map","user","index","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","e","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAmBeA,MAjBf,SAAcC,GACZ,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GAErB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBACEC,IAAG,+BAA0BF,EAA1B,cAEHG,IAAI,WAEN,6BAAKL,IAEL,4BAAIC,QCAKK,MAXf,SAAkBP,GAChB,IACMQ,EADaR,EAAXS,OACkBC,KAAI,SAACC,EAAMC,GACnC,OACE,cAAC,EAAD,CAAkBT,GAAIQ,EAAKR,GAAIF,KAAMU,EAAKV,KAAMC,MAAOS,EAAKT,OAAjDU,MAIf,OAAO,8BAAMJ,K,MCIAK,MAbf,YAAkD,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAChC,OACE,qBAAKX,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVY,KAAK,SACLC,YAAY,eACZC,SAAUH,O,MCOHI,MAdf,SAAgBnB,GACd,OACE,qBACEoB,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGvB,EAAMwB,YCyCEC,E,kDA5Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEd,YAAaa,EAAEE,OAAOC,SAbtC,EAAKC,MAAQ,CACXtB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBkB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKR,SAAS,CAAEnB,OAAQ2B,S,oBAO7C,WACE,MAAgCC,KAAKN,MAA7BtB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACVwB,EAAiB7B,EAAO8B,QAAO,SAACC,GACpC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS5B,EAAY2B,kBAGvD,OAAKhC,EAAOkC,OAQR,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQ6B,SAVtB,oBAAIlC,UAAU,+CAAd,4B,GA3BUwC,IAAMC,WCKTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.29f61efa.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Card(props) {\r\n  const { name, email, id } = props;\r\n\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img\r\n        src={`https://robohash.org/${id}200Ã—200`}\r\n        // style={{ width: 200, height: 200 }}\r\n        alt=\"robots\"\r\n      />\r\n      <h2>{name}</h2>\r\n\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nfunction CardList(props) {\r\n  const { robots } = props;\r\n  const cardsArray = robots.map((user, index) => {\r\n    return (\r\n      <Card key={index} id={user.id} name={user.name} email={user.email} />\r\n    );\r\n  });\r\n\r\n  return <div>{cardsArray}</div>;\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nfunction SearchBox({ searchfield, searchChange }) {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search Robot\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nfunction Scroll(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"1px solid black\",\r\n        height: \"800px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport { robots } from \"../robots\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../components/Scroll\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`https://jsonplaceholder.typicode.com/users`)\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchChange = (e) => {\r\n    this.setState({ searchfield: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    });\r\n\r\n    if (!robots.length) {\r\n      return (\r\n        <h1 className=\"bg-light-red br4 pa4 ma3 shadow-5 fl w-25 tc\">\r\n          Loading...\r\n        </h1>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <CardList robots={filteredRobots} />\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport tachyons from \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}